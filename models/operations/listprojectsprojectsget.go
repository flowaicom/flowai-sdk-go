// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"github.com/flowaicom/flowai-sdk-go/models/components"
)

type ListProjectsProjectsGetRequest struct {
	// Filter projects by status: 'active', 'all', 'archived'.
	Status *string `queryParam:"style=form,explode=true,name=status"`
	// Maximum number of projects to return.
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	// Number of projects to skip for pagination.
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
}

func (l ListProjectsProjectsGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListProjectsProjectsGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListProjectsProjectsGetRequest) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ListProjectsProjectsGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListProjectsProjectsGetRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

type ListProjectsProjectsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ProjectListResponse *components.ProjectListResponse
}

func (o *ListProjectsProjectsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListProjectsProjectsGetResponse) GetProjectListResponse() *components.ProjectListResponse {
	if o == nil {
		return nil
	}
	return o.ProjectListResponse
}
