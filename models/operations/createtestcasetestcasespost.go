// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"github.com/flowaicom/flowai-sdk-go/models/components"
)

type CreateTestCaseTestCasesPostRequest struct {
	APIKeyUserID   *string                   `default:"mock_api_key_user_id" queryParam:"style=form,explode=true,name=api_key_user_id"`
	TestCaseCreate components.TestCaseCreate `request:"mediaType=application/json"`
}

func (c CreateTestCaseTestCasesPostRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateTestCaseTestCasesPostRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateTestCaseTestCasesPostRequest) GetAPIKeyUserID() *string {
	if o == nil {
		return nil
	}
	return o.APIKeyUserID
}

func (o *CreateTestCaseTestCasesPostRequest) GetTestCaseCreate() components.TestCaseCreate {
	if o == nil {
		return components.TestCaseCreate{}
	}
	return o.TestCaseCreate
}

type CreateTestCaseTestCasesPostResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	TestCaseRead *components.TestCaseRead
}

func (o *CreateTestCaseTestCasesPostResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateTestCaseTestCasesPostResponse) GetTestCaseRead() *components.TestCaseRead {
	if o == nil {
		return nil
	}
	return o.TestCaseRead
}
