// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"github.com/flowaicom/flowai-sdk-go/models/components"
)

type ListJobsForProjectProjectsProjectIDJobsGetRequest struct {
	ProjectID string `pathParam:"style=simple,explode=false,name=project_id"`
	// Filter by status
	Status *string `queryParam:"style=form,explode=true,name=status"`
	// Page size limit
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	// Page offset
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
}

func (l ListJobsForProjectProjectsProjectIDJobsGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListJobsForProjectProjectsProjectIDJobsGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListJobsForProjectProjectsProjectIDJobsGetRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *ListJobsForProjectProjectsProjectIDJobsGetRequest) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ListJobsForProjectProjectsProjectIDJobsGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListJobsForProjectProjectsProjectIDJobsGetRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

type ListJobsForProjectProjectsProjectIDJobsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	JobListResponse *components.JobListResponse
}

func (o *ListJobsForProjectProjectsProjectIDJobsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListJobsForProjectProjectsProjectIDJobsGetResponse) GetJobListResponse() *components.JobListResponse {
	if o == nil {
		return nil
	}
	return o.JobListResponse
}
