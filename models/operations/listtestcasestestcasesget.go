// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"github.com/flowaicom/flowai-sdk-go/models/components"
)

type ListTestCasesTestCasesGetRequest struct {
	Skip  *int64 `default:"0" queryParam:"style=form,explode=true,name=skip"`
	Limit *int64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Field to sort by (e.g., 'name', 'created_at')
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort direction ('asc' or 'desc')
	SortOrder *string `default:"asc" queryParam:"style=form,explode=true,name=sort_order"`
	// Filter by name (partial match)
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Filter by status
	Status *string `queryParam:"style=form,explode=true,name=status"`
	// Filter by creation date (ISO format, YYYY-MM-DDTHH:MM:SSZ)
	CreatedAfter *string `queryParam:"style=form,explode=true,name=created_after"`
	// Filter by creation date (ISO format, YYYY-MM-DDTHH:MM:SSZ)
	CreatedBefore *string `queryParam:"style=form,explode=true,name=created_before"`
	// Filter by Batch ID
	BatchID    *string               `queryParam:"style=form,explode=true,name=batch_id"`
	JWTPayload components.JWTPayload `request:"mediaType=application/json"`
}

func (l ListTestCasesTestCasesGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListTestCasesTestCasesGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListTestCasesTestCasesGetRequest) GetSkip() *int64 {
	if o == nil {
		return nil
	}
	return o.Skip
}

func (o *ListTestCasesTestCasesGetRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListTestCasesTestCasesGetRequest) GetSortBy() *string {
	if o == nil {
		return nil
	}
	return o.SortBy
}

func (o *ListTestCasesTestCasesGetRequest) GetSortOrder() *string {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

func (o *ListTestCasesTestCasesGetRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListTestCasesTestCasesGetRequest) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ListTestCasesTestCasesGetRequest) GetCreatedAfter() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAfter
}

func (o *ListTestCasesTestCasesGetRequest) GetCreatedBefore() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBefore
}

func (o *ListTestCasesTestCasesGetRequest) GetBatchID() *string {
	if o == nil {
		return nil
	}
	return o.BatchID
}

func (o *ListTestCasesTestCasesGetRequest) GetJWTPayload() components.JWTPayload {
	if o == nil {
		return components.JWTPayload{}
	}
	return o.JWTPayload
}

type ListTestCasesTestCasesGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ResponseListTestCasesTestCasesGet []components.TestCaseRead
}

func (o *ListTestCasesTestCasesGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListTestCasesTestCasesGetResponse) GetResponseListTestCasesTestCasesGet() []components.TestCaseRead {
	if o == nil {
		return nil
	}
	return o.ResponseListTestCasesTestCasesGet
}
