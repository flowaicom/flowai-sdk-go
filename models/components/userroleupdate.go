// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Role string

const (
	RoleUser      Role = "user"
	RoleValidator Role = "validator"
)

func (e Role) ToPointer() *Role {
	return &e
}
func (e *Role) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		fallthrough
	case "validator":
		*e = Role(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Role: %v", v)
	}
}

// UserRoleUpdate - Schema for updating a user's role in Clerk.
type UserRoleUpdate struct {
	Role Role `json:"role"`
}

func (o *UserRoleUpdate) GetRole() Role {
	if o == nil {
		return Role("")
	}
	return o.Role
}
