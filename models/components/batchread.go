// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"time"
)

// BatchRead - Schema for reading/returning batch data
type BatchRead struct {
	ProjectID          string         `json:"project_id"`
	PipelineRunID      string         `json:"pipeline_run_id"`
	Name               *string        `json:"name,omitempty"`
	Description        *string        `json:"description,omitempty"`
	ID                 string         `json:"id"`
	Error              *string        `json:"error,omitempty"`
	CreatedAt          time.Time      `json:"created_at"`
	UpdatedAt          time.Time      `json:"updated_at"`
	TestCases          []TestCaseRead `json:"test_cases,omitempty"`
	TotalTestCases     int64          `json:"total_test_cases"`
	CompletedTestCases int64          `json:"completed_test_cases"`
}

func (b BatchRead) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BatchRead) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BatchRead) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *BatchRead) GetPipelineRunID() string {
	if o == nil {
		return ""
	}
	return o.PipelineRunID
}

func (o *BatchRead) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *BatchRead) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *BatchRead) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BatchRead) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *BatchRead) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BatchRead) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *BatchRead) GetTestCases() []TestCaseRead {
	if o == nil {
		return nil
	}
	return o.TestCases
}

func (o *BatchRead) GetTotalTestCases() int64 {
	if o == nil {
		return 0
	}
	return o.TotalTestCases
}

func (o *BatchRead) GetCompletedTestCases() int64 {
	if o == nil {
		return 0
	}
	return o.CompletedTestCases
}
