// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"time"
)

type APIKeyCreateResponse struct {
	ID         string     `json:"id"`
	KeyName    string     `json:"key_name"`
	KeyPrefix  string     `json:"key_prefix"`
	APIKey     string     `json:"api_key"`
	UserID     string     `json:"user_id"`
	CreatedAt  time.Time  `json:"created_at"`
	LastUsedAt *time.Time `json:"last_used_at,omitempty"`
}

func (a APIKeyCreateResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIKeyCreateResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APIKeyCreateResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *APIKeyCreateResponse) GetKeyName() string {
	if o == nil {
		return ""
	}
	return o.KeyName
}

func (o *APIKeyCreateResponse) GetKeyPrefix() string {
	if o == nil {
		return ""
	}
	return o.KeyPrefix
}

func (o *APIKeyCreateResponse) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *APIKeyCreateResponse) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *APIKeyCreateResponse) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *APIKeyCreateResponse) GetLastUsedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUsedAt
}
