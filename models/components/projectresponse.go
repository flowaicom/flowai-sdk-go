// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/flowaicom/flowai-sdk-go/internal/utils"
	"time"
)

type ProjectResponse struct {
	// Name of the project.
	Name string `json:"name"`
	// Description of the project.
	Description *string   `json:"description,omitempty"`
	ID          string    `json:"id"`
	UserID      string    `json:"user_id"`
	IsActive    bool      `json:"is_active"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

func (p ProjectResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProjectResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProjectResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ProjectResponse) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ProjectResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ProjectResponse) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ProjectResponse) GetIsActive() bool {
	if o == nil {
		return false
	}
	return o.IsActive
}

func (o *ProjectResponse) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ProjectResponse) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
