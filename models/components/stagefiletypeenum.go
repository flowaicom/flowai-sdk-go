// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// StageFileTypeEnum - Enum for stage file types that inherits from str for better JSON/OpenAPI compatibility
type StageFileTypeEnum string

const (
	StageFileTypeEnumAgentRules          StageFileTypeEnum = "AGENT_RULES"
	StageFileTypeEnumToolDefinitions     StageFileTypeEnum = "TOOL_DEFINITIONS"
	StageFileTypeEnumDatabaseSchemaRules StageFileTypeEnum = "DATABASE_SCHEMA_RULES"
	StageFileTypeEnumCustomDataFiles     StageFileTypeEnum = "CUSTOM_DATA_FILES"
	StageFileTypeEnumRelationalDbSchema  StageFileTypeEnum = "RELATIONAL_DB_SCHEMA"
)

func (e StageFileTypeEnum) ToPointer() *StageFileTypeEnum {
	return &e
}
func (e *StageFileTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AGENT_RULES":
		fallthrough
	case "TOOL_DEFINITIONS":
		fallthrough
	case "DATABASE_SCHEMA_RULES":
		fallthrough
	case "CUSTOM_DATA_FILES":
		fallthrough
	case "RELATIONAL_DB_SCHEMA":
		*e = StageFileTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StageFileTypeEnum: %v", v)
	}
}
